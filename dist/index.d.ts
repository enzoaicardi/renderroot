// Generated by dts-bundle-generator v9.5.1

export type RenderCallback<Arguments extends unknown[]> = (...args: Arguments) => string;
export type NullaryRenderCallback = () => string;
export interface ContextProvider<Type> {
	(value: Type, callback: NullaryRenderCallback): string;
}
export declare function createContext<Type>(defaultValue: Type): ContextProvider<Type>;
export declare function useContext<Type>(provider: ContextProvider<Type>): Type;
declare class RenderRoot extends HTMLElement {
	disconnectedCallback: () => void;
	constructor();
}
export type LifeCycleCallback = (customElement: RenderRoot) => void;
export declare function useLifeCycle(): ((callback: LifeCycleCallback) => void)[];
declare class Root {
	static current: Root;
	contexts: Map<ContextProvider<unknown>, unknown>;
	constructorCallbacks: Array<LifeCycleCallback>[];
	disconnectedCallbacks: Array<LifeCycleCallback>[];
}
export declare function useRoot(): Root;
export declare function createRoot(callback: NullaryRenderCallback, root?: Root): Element;
export declare function renderRoot<Arguments extends unknown[]>(callback: RenderCallback<Arguments>): (...args: Parameters<typeof callback>) => ReturnType<typeof callback>;

export {};
