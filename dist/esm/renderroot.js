class n{static t=new n;contexts=new Map;constructorCallbacks=[];disconnectedCallbacks=[]}function t(){return n.t}function o(t){const o=(c=t,r)=>{const e=o,s=n.t.contexts.get(e);n.t.contexts.set(e,c);const u=r();return n.t.contexts.set(e,s),u};return o}function c(t){return n.t.contexts.get(t)}class r extends HTMLElement{disconnectedCallback;constructor(){super();const t=n.t.constructorCallbacks.shift(),o=n.t.disconnectedCallbacks.shift();if(t)for(const n of t)n(this);this.disconnectedCallback=()=>{if(o)for(const n of o)n(this)}}}const e=document.createElement("div");function s(t,o){const c=n.t;n.t=o||new n;const r=t();return e.innerHTML=r,n.t=c,e.firstElementChild}function u(){return[i(n.t.constructorCallbacks),i(n.t.disconnectedCallbacks)]}function i(n){return t=>{const o=n[n.length-1];o&&o.push(t)}}function f(t){return(...o)=>(n.t.constructorCallbacks.push([]),n.t.disconnectedCallbacks.push([]),"<render-root>"+t(...o)+"</render-root>")}customElements.define("render-root",r);export{o as createContext,s as createRoot,f as renderRoot,c as useContext,u as useLifeCycle,t as useRoot};
